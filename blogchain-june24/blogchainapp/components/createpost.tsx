"use client"

import React, { useState, useEffect } from "react";
import Web3 from "web3";
import {ethers} from "ethers";
interface NewPostFormProps {
  web3: Web3;
  account: string;
  
}

const MyValContract = {
  _format: "hh-sol-artifact-1",
  contractName: "MyValContract",
  sourceName: "contracts/Contract.sol",
  abi: [
    {
      anonymous: false,
      inputs: [
        {
          indexed: false,
          internalType: "address",
          name: "recipient",
          type: "address",
        },
        {
          indexed: false,
          internalType: "uint256",
          name: "postId",
          type: "uint256",
        },
      ],
      name: "Addpost",
      type: "event",
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: false,
          internalType: "uint256",
          name: "postId",
          type: "uint256",
        },
        {
          indexed: false,
          internalType: "bool",
          name: "isDeleted",
          type: "bool",
        },
      ],
      name: "Deletepost",
      type: "event",
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: false,
          internalType: "uint256",
          name: "postId",
          type: "uint256",
        },
        {
          indexed: false,
          internalType: "address",
          name: "approver",
          type: "address",
        },
      ],
      name: "PostApproved",
      type: "event",
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: false,
          internalType: "uint256",
          name: "postId",
          type: "uint256",
        },
        {
          indexed: false,
          internalType: "address",
          name: "liker",
          type: "address",
        },
      ],
      name: "PostLiked",
      type: "event",
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: false,
          internalType: "uint256",
          name: "postId",
          type: "uint256",
        },
        {
          indexed: false,
          internalType: "bool",
          name: "isVerified",
          type: "bool",
        },
      ],
      name: "Validatepost",
      type: "event",
    },
    {
      inputs: [
        {
          internalType: "string",
          name: "postText",
          type: "string",
        },
        {
          internalType: "bool",
          name: "isDeleted",
          type: "bool",
        },
      ],
      name: "addpost",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [
        {
          internalType: "uint256",
          name: "",
          type: "uint256",
        },
      ],
      name: "approvals",
      outputs: [
        {
          internalType: "uint256",
          name: "",
          type: "uint256",
        },
      ],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [
        {
          internalType: "uint256",
          name: "_postId",
          type: "uint256",
        },
      ],
      name: "expertapprove",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [],
      name: "getAllposts",
      outputs: [
        {
          components: [
            {
              internalType: "uint256",
              name: "id",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "username",
              type: "address",
            },
            {
              internalType: "string",
              name: "postText",
              type: "string",
            },
            {
              internalType: "bool",
              name: "isDeleted",
              type: "bool",
            },
            {
              internalType: "bool",
              name: "isVerified",
              type: "bool",
            },
            {
              internalType: "uint256",
              name: "likes",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "approvals",
              type: "uint256",
            },
          ],
          internalType: "struct MyValContract.post[]",
          name: "",
          type: "tuple[]",
        },
      ],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [
        {
          internalType: "uint256",
          name: "_postId",
          type: "uint256",
        },
      ],
      name: "likePost",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [
        {
          internalType: "uint256",
          name: "",
          type: "uint256",
        },
      ],
      name: "likes",
      outputs: [
        {
          internalType: "uint256",
          name: "",
          type: "uint256",
        },
      ],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [
        {
          internalType: "uint256",
          name: "_postId",
          type: "uint256",
        },
      ],
      name: "validatepost",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
  ],
  bytecode:
    "0x608060405234801561001057600080fd5b50610c03806100206000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80637e9dffe61161005b5780637e9dffe6146100dd578063aee5c349146100fd578063bc7bf1c714610112578063d4ccd5f31461012557600080fd5b8063204ff2401461008257806363035f6614610097578063725009d3146100ca575b600080fd5b61009561009036600461083b565b610138565b005b6100b76100a536600461083b565b60036020526000908152604090205481565b6040519081526020015b60405180910390f35b6100956100d836600461083b565b61022d565b6100b76100eb36600461083b565b60026020526000908152604090205481565b610105610281565b6040516100c19190610854565b61009561012036600461083b565b61053c565b610095610133366004610985565b61064b565b600081815260036020526040812080549161015283610a47565b9091555050600081815260036020526040902054600a10156101f15760016000828154811061018357610183610a6e565b906000526020600020906006020160030160016101000a81548160ff0219169083151502179055507fb1c8a09f3f65c01ce2ad5471f151a4d0ca61d365bcd286c0f0041845538f2b098160016040516101e89291909182521515602082015260400190565b60405180910390a15b604080518281523360208201527fc6c773bb48fb8d38ada891d09df01af1f307f2a1bc38bb513c5cb1950150038191015b60405180910390a150565b600081815260026020526040812080549161024783610a47565b9091555050604080518281523360208201527fcf765d6f163c9b0d832e2a94f4c8e9bffd32a2c3ca5fdbb8cc67b5fe1441f4139101610222565b600080546060919067ffffffffffffffff8111156102a1576102a161095a565b6040519080825280602002602001820160405280156102da57816020015b6102c76107f1565b8152602001906001900390816102bf5790505b5090506000805b60005481101561048757600081815481106102fe576102fe610a6e565b6000918252602082206003600690920201015460ff1615159003610475576000818154811061032f5761032f610a6e565b90600052602060002090600602016040518060e0016040529081600082015481526020016001820160009054906101000a90046001600160a01b03166001600160a01b03166001600160a01b0316815260200160028201805461039190610a84565b80601f01602080910402602001604051908101604052809291908181526020018280546103bd90610a84565b801561040a5780601f106103df5761010080835404028352916020019161040a565b820191906000526020600020905b8154815290600101906020018083116103ed57829003601f168201915b5050509183525050600382015460ff80821615156020840152610100909104161515604082015260048201546060820152600590910154608090910152835184908490811061045b5761045b610a6e565b6020026020010181905250818061047190610a47565b9250505b8061047f81610a47565b9150506102e1565b5060008167ffffffffffffffff8111156104a3576104a361095a565b6040519080825280602002602001820160405280156104dc57816020015b6104c96107f1565b8152602001906001900390816104c15790505b50905060005b82811015610534578381815181106104fc576104fc610a6e565b602002602001015182828151811061051657610516610a6e565b6020026020010181905250808061052c90610a47565b9150506104e2565b509392505050565b6000818154811061054f5761054f610a6e565b906000526020600020906006020160030160019054906101000a900460ff16156105b75760405162461bcd60e51b81526020600482015260156024820152741c1bdcdd08185b1c9958591e481d995c9a599a5959605a1b604482015260640160405180910390fd5b600081815260036020526040902054600a1015610648576001600082815481106105e3576105e3610a6e565b906000526020600020906006020160030160016101000a81548160ff0219169083151502179055507fb1c8a09f3f65c01ce2ad5471f151a4d0ca61d365bcd286c0f0041845538f2b098160016040516102229291909182521515602082015260400190565b50565b600080546040805160e081018252828152336020820190815291810186815285151560608301526080820185905260a0820185905260c0820185905260018401855584805281517f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5636006860290810191825593517f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e564850180546001600160a01b0319166001600160a01b039092169190911790559051939493919290917f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e565909101906107379082610b0d565b506060820151600382018054608085015115156101000261ff00199315159390931661ffff199091161791909117905560a0820151600482015560c0909101516005909101556000828152600160205260409081902080546001600160a01b0319163390811790915590517f4ea9a4c2644295403d8e347c48692cc92bf605a5fb4b31e88976a41e5b1199c2916107e39185906001600160a01b03929092168252602082015260400190565b60405180910390a150505050565b6040518060e001604052806000815260200160006001600160a01b031681526020016060815260200160001515815260200160001515815260200160008152602001600081525090565b60006020828403121561084d57600080fd5b5035919050565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b8481101561094b57898403603f19018652825180518552888101516001600160a01b0316898601528781015160e089870181905281519087018190528491905b808310156108db578183018c01518884016101000152918b01916108bc565b61010092508583828a01015260609150818401516108fc838a018215159052565b506080915081840151610912838a018215159052565b5060a0848101519089015260c093840151938801939093525096890196601f909101601f1916909401909301929187019160010161087c565b50919998505050505050505050565b634e487b7160e01b600052604160045260246000fd5b8035801515811461098057600080fd5b919050565b6000806040838503121561099857600080fd5b823567ffffffffffffffff808211156109b057600080fd5b818501915085601f8301126109c457600080fd5b8135818111156109d6576109d661095a565b604051601f8201601f19908116603f011681019083821181831017156109fe576109fe61095a565b81604052828152886020848701011115610a1757600080fd5b826020860160208301376000602084830101528096505050505050610a3e60208401610970565b90509250929050565b600060018201610a6757634e487b7160e01b600052601160045260246000fd5b5060010190565b634e487b7160e01b600052603260045260246000fd5b600181811c90821680610a9857607f821691505b602082108103610ab857634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115610b0857600081815260208120601f850160051c81016020861015610ae55750805b601f850160051c820191505b81811015610b0457828155600101610af1565b5050505b505050565b815167ffffffffffffffff811115610b2757610b2761095a565b610b3b81610b358454610a84565b84610abe565b602080601f831160018114610b705760008415610b585750858301515b600019600386901b1c1916600185901b178555610b04565b600085815260208120601f198616915b82811015610b9f57888601518255948401946001909101908401610b80565b5085821015610bbd5787850151600019600388901b60f8161c191681555b5050505050600190811b0190555056fea26469706673582212200195b88978d10dff262c3119c36eddd801ed8748b2c9c9d8eefad3eecd1a92e464736f6c63430008130033",
  deployedBytecode:
    "0x608060405234801561001057600080fd5b506004361061007d5760003560e01c80637e9dffe61161005b5780637e9dffe6146100dd578063aee5c349146100fd578063bc7bf1c714610112578063d4ccd5f31461012557600080fd5b8063204ff2401461008257806363035f6614610097578063725009d3146100ca575b600080fd5b61009561009036600461083b565b610138565b005b6100b76100a536600461083b565b60036020526000908152604090205481565b6040519081526020015b60405180910390f35b6100956100d836600461083b565b61022d565b6100b76100eb36600461083b565b60026020526000908152604090205481565b610105610281565b6040516100c19190610854565b61009561012036600461083b565b61053c565b610095610133366004610985565b61064b565b600081815260036020526040812080549161015283610a47565b9091555050600081815260036020526040902054600a10156101f15760016000828154811061018357610183610a6e565b906000526020600020906006020160030160016101000a81548160ff0219169083151502179055507fb1c8a09f3f65c01ce2ad5471f151a4d0ca61d365bcd286c0f0041845538f2b098160016040516101e89291909182521515602082015260400190565b60405180910390a15b604080518281523360208201527fc6c773bb48fb8d38ada891d09df01af1f307f2a1bc38bb513c5cb1950150038191015b60405180910390a150565b600081815260026020526040812080549161024783610a47565b9091555050604080518281523360208201527fcf765d6f163c9b0d832e2a94f4c8e9bffd32a2c3ca5fdbb8cc67b5fe1441f4139101610222565b600080546060919067ffffffffffffffff8111156102a1576102a161095a565b6040519080825280602002602001820160405280156102da57816020015b6102c76107f1565b8152602001906001900390816102bf5790505b5090506000805b60005481101561048757600081815481106102fe576102fe610a6e565b6000918252602082206003600690920201015460ff1615159003610475576000818154811061032f5761032f610a6e565b90600052602060002090600602016040518060e0016040529081600082015481526020016001820160009054906101000a90046001600160a01b03166001600160a01b03166001600160a01b0316815260200160028201805461039190610a84565b80601f01602080910402602001604051908101604052809291908181526020018280546103bd90610a84565b801561040a5780601f106103df5761010080835404028352916020019161040a565b820191906000526020600020905b8154815290600101906020018083116103ed57829003601f168201915b5050509183525050600382015460ff80821615156020840152610100909104161515604082015260048201546060820152600590910154608090910152835184908490811061045b5761045b610a6e565b6020026020010181905250818061047190610a47565b9250505b8061047f81610a47565b9150506102e1565b5060008167ffffffffffffffff8111156104a3576104a361095a565b6040519080825280602002602001820160405280156104dc57816020015b6104c96107f1565b8152602001906001900390816104c15790505b50905060005b82811015610534578381815181106104fc576104fc610a6e565b602002602001015182828151811061051657610516610a6e565b6020026020010181905250808061052c90610a47565b9150506104e2565b509392505050565b6000818154811061054f5761054f610a6e565b906000526020600020906006020160030160019054906101000a900460ff16156105b75760405162461bcd60e51b81526020600482015260156024820152741c1bdcdd08185b1c9958591e481d995c9a599a5959605a1b604482015260640160405180910390fd5b600081815260036020526040902054600a1015610648576001600082815481106105e3576105e3610a6e565b906000526020600020906006020160030160016101000a81548160ff0219169083151502179055507fb1c8a09f3f65c01ce2ad5471f151a4d0ca61d365bcd286c0f0041845538f2b098160016040516102229291909182521515602082015260400190565b50565b600080546040805160e081018252828152336020820190815291810186815285151560608301526080820185905260a0820185905260c0820185905260018401855584805281517f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5636006860290810191825593517f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e564850180546001600160a01b0319166001600160a01b039092169190911790559051939493919290917f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e565909101906107379082610b0d565b506060820151600382018054608085015115156101000261ff00199315159390931661ffff199091161791909117905560a0820151600482015560c0909101516005909101556000828152600160205260409081902080546001600160a01b0319163390811790915590517f4ea9a4c2644295403d8e347c48692cc92bf605a5fb4b31e88976a41e5b1199c2916107e39185906001600160a01b03929092168252602082015260400190565b60405180910390a150505050565b6040518060e001604052806000815260200160006001600160a01b031681526020016060815260200160001515815260200160001515815260200160008152602001600081525090565b60006020828403121561084d57600080fd5b5035919050565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b8481101561094b57898403603f19018652825180518552888101516001600160a01b0316898601528781015160e089870181905281519087018190528491905b808310156108db578183018c01518884016101000152918b01916108bc565b61010092508583828a01015260609150818401516108fc838a018215159052565b506080915081840151610912838a018215159052565b5060a0848101519089015260c093840151938801939093525096890196601f909101601f1916909401909301929187019160010161087c565b50919998505050505050505050565b634e487b7160e01b600052604160045260246000fd5b8035801515811461098057600080fd5b919050565b6000806040838503121561099857600080fd5b823567ffffffffffffffff808211156109b057600080fd5b818501915085601f8301126109c457600080fd5b8135818111156109d6576109d661095a565b604051601f8201601f19908116603f011681019083821181831017156109fe576109fe61095a565b81604052828152886020848701011115610a1757600080fd5b826020860160208301376000602084830101528096505050505050610a3e60208401610970565b90509250929050565b600060018201610a6757634e487b7160e01b600052601160045260246000fd5b5060010190565b634e487b7160e01b600052603260045260246000fd5b600181811c90821680610a9857607f821691505b602082108103610ab857634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115610b0857600081815260208120601f850160051c81016020861015610ae55750805b601f850160051c820191505b81811015610b0457828155600101610af1565b5050505b505050565b815167ffffffffffffffff811115610b2757610b2761095a565b610b3b81610b358454610a84565b84610abe565b602080601f831160018114610b705760008415610b585750858301515b600019600386901b1c1916600185901b178555610b04565b600085815260208120601f198616915b82811015610b9f57888601518255948401946001909101908401610b80565b5085821015610bbd5787850151600019600388901b60f8161c191681555b5050505050600190811b0190555056fea26469706673582212200195b88978d10dff262c3119c36eddd801ed8748b2c9c9d8eefad3eecd1a92e464736f6c63430008130033",
  linkReferences: {},
  deployedLinkReferences: {},
  networks: {
    "11155111": {
      address: "0x5FbDB2315678afecb367f032d93F642f64180aa3",
      transactionHash:
        "0xbba71ce765f4e89af90e4f1b9447086da42e8fe6e4ea33eb787b8a36584579bf"    },
  },
};

const contractABI = MyValContract.abi;
const contractAddress = "0x5FbDB2315678afecb367f032d93F642f64180aa3"

const NewPostForm: React.FC<NewPostFormProps> = ({ web3, account }) => {
  const [postText, setPostText] = useState<string>("");

  const handleSubmit = async (event: React.FormEvent) => {
    event.preventDefault();
    const contract = new web3.eth.Contract(
      MyValContract.abi,
      MyValContract.networks[11155111].address
    );

    try{
      const provider = new ethers.providers.JsonRpcProvider("http://127.0.0.1:8545/");

      const contract = new ethers.Contract(contractAddress, contractABI,provider.getSigner());

      const content = postText;
      const tx = await contract.addpost(content, false);

    }
    catch(error)
    {
      console.log("Failed to fetch", error);
    }
  };

  return (
    <div>
      <form onSubmit={handleSubmit}>
      <textarea
        value={postText}
        onChange={(e) => setPostText(e.target.value)}
        placeholder="Write your post"
        required
      />
      <button type="submit">Submit Post</button>
    </form>
    </div>
  );
};

export default NewPostForm;